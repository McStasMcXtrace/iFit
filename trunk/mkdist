#!/bin/sh
#
# Simple script for setting up an iFit distribution package.
#
#   This file is part of the iFit package
#   Copyright (C) 2010, All rights reserved
#   Institut Laue Langevin, Grenoble, France
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; version 2 of the License.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# requires: chroot, dpkg-deb, debootstrap

# Version: $Revision: 1.5 $
# define version and symbols that will be replaced in many places
IFIT_TARNAME=ifit
IFIT_NAME=iFit
MONTH=`date +"%b"`
DAY=`date +"%d"`
YEAR=`date +"%Y"`
IFIT_DATE="$MONTH. $DAY, $YEAR"
if [ "y$1" = "y" ]; then
  IFIT_VERSION="$YEAR.$MONTH.$DAY"
else
  IFIT_VERSION=$1
fi
IFIT_STRING="$IFIT_NAME $IFIT_VERSION - $MONTH. $DAY, $YEAR"

# Create temporary workdir:
PW=`pwd`
TMPDIR=$PWD/..
DIST=$TMPDIR/$IFIT_TARNAME-$IFIT_VERSION

# Copy current PW checkout to DIST
rm -rf $DIST
cp -rp $PW $DIST

# Go in DIST, clean up CVS/SVN information
cd $DIST
echo "Clean up CVS/SVN info and temporary files"
find . -name CVS -exec rm -rf \{\} \; 2> /dev/null
find . -name .CVS -exec rm -rf \{\} \; 2> /dev/null
find . -name CVSROOT -exec rm -rf \{\} \; 2> /dev/null
find . -name svn -exec rm -rf \{\} \; 2> /dev/null
find . -name .svn -exec rm -rf \{\} \; 2> /dev/null
find . -name "*~" -exec rm -rf \{\} \; 2> /dev/null
rm mkdist
# we keep the MeX files as some users may not have C compilers installed (e.g. Windows 64 bit)
# rm Loaders/looktxt.mex*

# Update version and date
for file in README.txt Objects/@iData/version.m Docs/index.html Docs/Install.html Applications/standalone/deb/control Applications/standalone/deb/debcreate
do
sed 's/@IFIT_VERSION@/'$IFIT_VERSION'/'  $file     > $file.tmp
sed 's/@IFIT_NAME@/'$IFIT_NAME'/'        $file.tmp > $file
sed 's/@IFIT_TARNAME@/'$IFIT_TARNAME'/'  $file     > $file.tmp
sed 's/@IFIT_DATE@/'$MONTH'. '$DAY', '$YEAR'/'  $file.tmp > $file
rm $file.tmp
done

cd $TMPDIR
# Create tar archive SRC
rm $PW/../$IFIT_TARNAME-$IFIT_VERSION-src.zip
zip -r $PW/../$IFIT_TARNAME-$IFIT_VERSION-src.zip $IFIT_TARNAME-$IFIT_VERSION

if [ -x `which mcc` ]
then
  echo create the standalone version into $TMPDIR/$IFIT_TARNAME-$IFIT_VERSION-amd64
  matlab -nojvm -nosplash -r "addpath(genpath('$TMPDIR/$IFIT_TARNAME-$IFIT_VERSION')); make('$TMPDIR/$IFIT_TARNAME-$IFIT_VERSION-amd64'); exit"
  cd $TMPDIR
  zip -r $IFIT_TARNAME-$IFIT_VERSION-amd64.zip $IFIT_TARNAME-$IFIT_VERSION-amd64
fi

if [ -e $TMPDIR/$IFIT_TARNAME-$IFIT_VERSION-amd64 ]
then
  if [ -e /etc/debian_version ]
  then
    if [ -e build-chroot-amd64 ]
    then
      BUILDDIR="build-chroot-amd64/build/$IFIT_TARNAME-$IFIT_VERSION"
      echo Proceeding to amd64 .deb build 
      echo from $TMPDIR/$IFIT_TARNAME-$IFIT_VERSION-amd64
      echo into $BUILDDIR
      
      # First, clean up in case of previous iFit installs in the chroot
      sudo rm -rf ${BUILDDIR}
      # install package in build location
      sudo mkdir -p ${BUILDDIR}/DEBIAN
      sudo mkdir -p ${BUILDDIR}/usr/local/bin
      sudo mkdir -p ${BUILDDIR}/usr/local/$IFIT_TARNAME
      sudo mkdir -p ${BUILDDIR}/usr/share/applications
      sudo mkdir -p ${BUILDDIR}/usr/share/doc/$IFIT_TARNAME
      sudo mkdir -p ${BUILDDIR}/usr/share/icons/$IFIT_TARNAME
      sudo mkdir -p ${BUILDDIR}/usr/share/pixmaps
      sudo cp -r $IFIT_TARNAME-$IFIT_VERSION-amd64/*    ${BUILDDIR}/usr/local/$IFIT_TARNAME
      sudo cp -r $IFIT_TARNAME-$IFIT_VERSION/Docs/*     ${BUILDDIR}/usr/share/doc/$IFIT_TARNAME/
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/COPYING    ${BUILDDIR}/usr/share/doc/$IFIT_TARNAME/copyright
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/README.txt ${BUILDDIR}/usr/share/doc/$IFIT_TARNAME/
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/Applications/standalone/ifit.desktop \
                                                        ${BUILDDIR}/usr/share/applications/
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/Applications/standalone/iFit-logo.png \
                                                        ${BUILDDIR}/usr/share/pixmaps/
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/Applications/standalone/deb/control \
                                                        ${BUILDDIR}/DEBIAN
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/Applications/standalone/icons/*.png \
                                                        ${BUILDDIR}/usr/share/icons/$IFIT_TARNAME/
      # sudo chroot build-chroot-amd64 apt-get update
      sudo cp    $IFIT_TARNAME-$IFIT_VERSION/Applications/standalone/deb/debcreate build-chroot-amd64/root/debcreate
      sudo chmod u+x build-chroot-amd64/root/debcreate
      sudo chroot build-chroot-amd64   /root/debcreate $IFIT_VERSION amd64
      echo
      echo Build packages created:
      echo
      cp build-chroot-amd64/build/*deb .
      ls -lf $IFIT_TARNAME-$IFIT_VERSION*.* $IFIT_TARNAME-$IFIT_VERSION*.*
      echo
    else
      echo You need a chroot environment based on debootstrap in build-chroot-amd64 before building the amd64 deb package - create using something like
      echo sudo debootstrap --arch amd64 precise build-chroot-amd64
    fi # build chroot present
  fi # debian
fi # amd64 build

echo "========================================================================="
echo "mkdist: Distro creation for $IFIT_STRING"
echo Your $IFIT_STRING dist packages are placed in
echo ../$IFIT_TARNAME-$IFIT_VERSION-src.zip

